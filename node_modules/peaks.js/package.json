{
  "name": "peaks.js",
  "version": "0.2.1",
  "description": "Frontend app for displaying audio waveforms",
  "main": "./src/main.js",
  "contributors": [
    {
      "name": "Chris Finch",
      "url": "https://github.com/chrisfinch"
    },
    {
      "name": "Thomas Parisot",
      "email": "thomas.parisot@bbc.co.uk",
      "url": "https://github.com/oncletom"
    },
    {
      "name": "Chris Needham",
      "url": "https://github.com/chrisn"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/bbcrd/peaks.js.git"
  },
  "license": "LGPL 3",
  "scripts": {
    "test": "npm run test-pre && npm run test-remote",
    "test-pre": "grunt jshint",
    "test-remote": "./node_modules/karma/bin/karma start --single-run --browsers SauceChrome,SauceFirefox,SauceFirefoxLinux,SauceSafari6,SauceSafari7,SauceIE9,SauceIE10,SauceIE11",
    "test-local": "./node_modules/karma/bin/karma start --single-run",
    "test-watch": "./node_modules/karma/bin/karma start --auto-watch --no-single-run --browsers Chrome",
    "changelog": "github-changes -o bbcrd -r peaks.js -n ${npm_package_version} -a --only-pulls --use-commit-body"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-connect": "~0.3.0",
    "grunt-contrib-jshint": "~0.6.1",
    "grunt-bower-install": "~0.8.0",
    "grunt-contrib-watch": "~0.5.1",
    "grunt-open": "~0.2.1",
    "grunt-devserver": "~0.4.1",
    "grunt-concurrent": "~0.3.0",
    "karma-script-launcher": "~0.1.0",
    "karma-chrome-launcher": "~0.1.0",
    "karma-firefox-launcher": "~0.1.0",
    "karma-html2js-preprocessor": "~0.1",
    "karma-requirejs": "~0.1.0",
    "karma-phantomjs-launcher": "~0.1.0",
    "karma": "^0.12.0",
    "karma-sauce-launcher": "~0.1.8",
    "karma-safari-launcher": "~0.1.1",
    "karma-sinon": "~1.0.0",
    "mocha": "~1.17.1",
    "karma-mocha": "~0.1.1",
    "karma-chai": "~0.0.2",
    "github-changes": "0.0.10"
  },
  "readme": "```\n     ____    ____    ______  __  __   ____         _____  ____\n    /\\  _`\\ /\\  _`\\ /\\  _  \\/\\ \\/\\ \\ /\\  _`\\      /\\___ \\/\\  _`\\\n    \\ \\ \\L\\ \\ \\ \\L\\_\\ \\ \\L\\ \\ \\ \\/'/'\\ \\,\\L\\_\\    \\/__/\\ \\ \\,\\L\\_\\\n     \\ \\ ,__/\\ \\  _\\L\\ \\  __ \\ \\ , <  \\/_\\__ \\       _\\ \\ \\/_\\__ \\\n      \\ \\ \\/  \\ \\ \\L\\ \\ \\ \\/\\ \\ \\ \\\\`\\  /\\ \\L\\ \\  __/\\ \\_\\ \\/\\ \\L\\ \\\n       \\ \\_\\   \\ \\____/\\ \\_\\ \\_\\ \\_\\ \\_\\\\ `\\____\\/\\_\\ \\____/\\ `\\____\\\n        \\/_/    \\/___/  \\/_/\\/_/\\/_/\\/_/ \\/_____/\\/_/\\/___/  \\/_____/\n```\n\n# PEAKS.JS [![Build Status](https://travis-ci.org/bbcrd/peaks.js.png?branch=master)](https://travis-ci.org/bbcrd/peaks.js)\n\n> A browser based audio waveform visualisation frontend component from BBC R&D\n\nPeaks is a modular frontend component designed for the display of and interaction with audio waveform material in the browser.\n\n![](peaks.png)\n\nPeaks was developed by [BBC R&D](http://www.bbc.co.uk/rd) to allow users to make accurate clippings of audio data over a timeline in browser, using a backend API that serves the waveform data.\n\nPeaks utilizes HTML5 canvas technology to display waveform data at different zoom levels and provides some basic convenience methods for interacting with waveforms and creating time-based visual sections for denoting content to be clipped or for reference, eg: distinguishing music from speech or identifying different music tracks.\n\nSee the Project overview here: [http://waveform.prototyping.bbc.co.uk/](http://waveform.prototyping.bbc.co.uk/)\n\n# Installation\n\n<table>\n  <thead>\n    <tr>\n      <th><a href=\"https://npmjs.org/\">npm</a></th>\n      <th><a href=\"https://github.com/bower/bower\">bower</a></th>\n      <th>old school</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>npm install --save peaks.js</code></td>\n      <td><code>bower install --save peaks.js</code></td>\n      <td><a href=\"https://github.com/bbcrd/peaks.js/archive/master.zip\">download zip file</a></td>\n    </tr>\n  </tbody>\n</table>\n\n# Using Peaks.js in your own project\n\nPeaks can be included in any web page by following these steps:\n\n1. include it your web page\n1. include a media element and its [waveform data file](https://github.com/bbcrd/audiowaveform)\n1. initialise Peaks\n\n```html\n<div id=\"peaks-container\"></div>\n<audio>\n  <source src=\"test_data/sample.mp3\" type=\"audio/mpeg\">\n  <source src=\"test_data/sample.ogg\" type=\"audio/ogg\">\n</audio>\n<script src=\"bower_components/requirejs/require.js\" data-main=\"app.js\"></script>\n```\n\n## Start using [require.js](http://requirejs.org/)\n\nAMD modules are working out of the box without any optimiser.\n\n```javascript\n// in app.js\n// configure peaks path\nrequirejs.config({\n  paths: {\n    peaks: 'bower_components/peaks.js/src/main',\n    EventEmitter: 'bower_components/eventEmitter/EventEmitter',\n    'waveform-data': 'bower_components/waveform-data/dist/waveform-data.min'\n  }\n});\n\n// requires it\nrequire(['peaks'], function (Peaks) {\n  var p = Peaks.init({\n    container: document.querySelector('#peaks-container'),\n    mediaElement: document.querySelector('audio'),\n    dataUri: 'test_data/sample.dat'\n  });\n\n  p.on('segments.ready', function(){\n    // do something when segments are ready to be displayed\n  });\n});\n```\n\nWorking examples are provided in [`demo_page.html`](demo_page.html) and [`demo_page_dev.html`](demo_page_dev.html).\n\n## Start using vanilla JavaScript\n\nAs of `peaks@0.2.0`, the vanilla JavaScript build is not shipped anymore.\n\nHere are several ways to build it your own way:\n\n- UMD conversion using [grunt-contrib-requirejs](https://www.npmjs.org/package/grunt-contrib-requirejs) and\n[almond](https://www.npmjs.org/package/almond)\n- transform to whatever you want using [browserify](https://www.npmjs.org/package/browserify) and\n[deamdify](https://www.npmjs.org/package/deamdify)\n\n[Read this blog post](http://dontkry.com/posts/code/browserify-and-the-universal-module-definition.html) or\n[have a glance](https://github.com/bbcrd/peaks.js/blob/e6e9579736fdd47ea213bd65332268709a61392a/Gruntfile.js#L13-35)\nat our ancient `r.js` build configuration.\n\n## Configuration\n\nThe available options for configuration of the viewer are as follows:\n\n```javascript\nvar options = {\n  /** REQUIRED OPTIONS **/\n  // Containing element\n  container: document.getElementById('peaks-container'),\n  // HTML5 Media element containing an audio track\n  mediaElement: document.getElementById('media'),\n  // URI to waveform data file in binary or JSON\n  dataUri: '../test_data/sample.dat',\n\n  /** Optional config with defaults **/\n  // height of the waveform canvases in pixels\n  height: 200,\n  // Array of zoom levels in samples per pixel (big >> small)\n  zoomLevels: [512, 1024, 2048, 4096],\n  // Bind keyboard controls\n  keyboard: false,\n  // Keyboard nudge increment in seconds (left arrow/right arrow)\n  nudgeIncrement: 0.01,\n  // Colour for the in marker of segments\n  inMarkerColor: '#a0a0a0',\n  // Colour for the out marker of segments\n  outMarkerColor: '#a0a0a0',\n  // Colour for the zoomed in waveform\n  zoomWaveformColor: 'rgba(0, 225, 128, 1)',\n  // Colour for the overview waveform\n  overviewWaveformColor: 'rgba(0,0,0,0.2)',\n  // Colour for segments on the waveform\n  segmentColor: 'rgba(255, 161, 39, 1)',\n  // Colour of the play head\n  playheadColor: 'rgba(0, 0, 0, 1)',\n  // Random colour per segment (overrides segmentColor)\n  randomizeSegmentColor: true,\n\n  // Array of initial segment objects with startTime and\n  // endTime in seconds and a boolean for editable.\n  // See below.\n  segments: [{\n    startTime: 120,\n    endTime: 140,\n    editable: true,\n    color: \"#ff0000\",\n    labelText: \"My label\"\n  },\n  {\n    startTime: 220,\n    endTime: 240,\n    editable: false,\n    color: \"#00ff00\",\n    labelText: \"My Second label\"\n  }]\n}\n```\n\n## Segment Format\n\nSegments provided from peaks.js use the following format:\n\n```javascript\n[{\n   // Assigned colour of the segment\n  color: \"rgba(123, 2, 61, 1)\",\n   // Editable state of the segment\n  editable: true,\n   // End time in seconds of the segment\n  endTime: 588.986667,\n   // Unique ID of the segment\n  id: \"segment0\",\n   // Kinetics.js Element group of segment canvas objects for overview waveform\n  overview: Kinetic.Group,\n   // End time in seconds of the segment\n  startTime: 578.986667,\n   // Kinetics.js Element group of segment canvas objects for overview waveform\n  zoom: Kinetic.Group\n}]\n```\n\n## Advanced configuration\n\nThe marker and label Kinetic.js objects may be overridden to give the segment markers or label your own custom appearance (see main.js / waveform.mixins.js, [Kinetic Polygon Example](http://www.html5canvastutorials.com/kineticjs/html5-canvas-kineticjs-polygon-tutorial/) and [Kinetic Text Example](http://www.html5canvastutorials.com/kineticjs/html5-canvas-kineticjs-text-tutorial/)) :\n\n```javascript\n{\n  segmentInMarker: mixins.defaultInMarker(p.options),\n  segmentOutMarker: mixins.defaultOutMarker(p.options),\n  segmentLabelDraw: mixins.defaultSegmentLabelDraw(p.options)\n}\n```\n\n# API\n\nThe top level `peaks` object exposes a factory to create new `peaks` instances.\n\n## `peaks.init(options)`\n\nStart a instance of peaks with the [assigned options](#Configuration). It enables you do deal with several instances\nof Peaks within a single page with one or several configurations.\n\n```js\nvar peaksInstance = peaks.init({ … });\nvar secondPeaksInstance = peaks.init({ … });\n```\n\n## `instance.time.getCurrentTime()`\n\nReturns currently selected time in seconds (convenience method interchangeable with `mediaElement.currentTime`).\n\n```js\nvar instance = peaks.init({ … });\n\nconsole.log(instance.time.getCurrentTime()); // -> 0\n```\n\n## `instance.time.setCurrentTime(timeInSeconds)`\n\nSets the media element selected time in seconds.\n\n```js\nvar instance = peaks.init({ … });\n\ninstance.time.setCurrentTime(5.85);\nconsole.log(instance.time.getCurrentTime()); // -> 5.85\n```\n\n## `instance.zoom.zoomOut()`\n\nZoom in the waveform zoom view by one level.\n\n```js\nvar instance = peaks.init({ …, zoomLevels: [512, 1024, 2048, 4096] });\n\ninstance.zoom.zoomOut(); // zoom level is now 1024\n```\n\n## `instance.zoom.zoomIn()`\n\nZoom in the waveform zoom view by one level.\n\n```js\nvar instance = peaks.init({ …, zoomLevels: [512, 1024, 2048, 4096] });\n\ninstance.zoom.zoomIn(); // zoom level is still 512\n\ninstance.zoom.zoomOut(); // zoom level is now 1024\ninstance.zoom.zoomIn(); // zoom level is now 512 again\n```\n\n## `instance.zoom.setZoom(indexInZoomArray)`\n\nSet the zoom level to the element in the `options.zoomLevels` array at index `indexInZoomArray`.\n\n```js\nvar instance = peaks.init({ …, zoomLevels: [512, 1024, 2048, 4096] });\n\ninstance.zoom.setZoom(3); // zoom level is now 4096\n```\n\n## `instance.zoom.getZoom()`\n\nReturn the current zoom level.\n\n```js\nvar instance = peaks.init({ …, zoomLevels: [512, 1024, 2048, 4096] });\n\ninstance.zoom.zoomOut();\nconsole.log(instance.zoom.getZoom()); // -> 1\n```\n\n\n## `instance.segments.addSegment(startTime, endTime, editable, color, labelText)`\n## `instance.segments.addSegment(segment[])`\n\nAdd a segment to the waveform timeline with starting time `startTime` (seconds), ending time `endTime` (seconds)\nand set whether the segment is user editable with `editable` (boolean, defaults to `false`).\n\n```js\nvar instance = peaks.init({ … });\n\ninstance.segments.addSegment(0, 10.5); //adds a 0 to 10.5 seconds non-editable segment with a random color\n```\n\nAlternatively, provide an array of segment objects as shown above in the config options as the first and only argument to add all those segments at once.\n\n```js\nvar instance = peaks.init({ … });\n\ninstance.segments.addSegment([\n  {\n    startTime: 0,\n    endTime: 10.5,\n    labelText: '0 to 10 seconds non-editable demo segment'\n  },\n  {\n    startTime: 3.14,\n    endTime: 4.2,\n    color: '#666'\n  }\n]);\n```\n\n## `instance.segments.getSegments()`\n\nReturns an array of objects representing all displayed segments present on the timeline in the segment format.\n\n\n# Development\n\nTo join the project, bake your own features or debug more easily, the best is to clone the project and develop against it:\n\n```bash\ngit clone https://github.com/bbcrd/peaks.js.git\ncd peaks.js\nnpm install -g grunt-cli bower\nnpm install\nbower install\n\ngrunt server-dev\n```\n\nThis will launch a livereload instance of peaks, refreshing the page every time you make a change to the sourcecode.\n\n# Testing\n\n`npm run test-local` should work for simple one time testing.\n\nIf you are developing and want to repeatedly run tests in a browser on your machine simply launch `npm run test-watch`.\n\n\n# License\n\nSee [COPYING](COPYING)\n\nThis project includes sample audio from the [radio show Desert Island](http://en.wikipedia.org/wiki/File:Alice_walker_bbc_radio4_desert_island_discs_19_05_2013.flac), used under the terms of the [Creative Commons 3.0 Unported License](http://creativecommons.org/licenses/by/3.0/).\n\n# Authors\n\n>  British Broadcasting Corporation\n\n- [Chris Finch](http://github.com/chrisfinch)\n- [Thomas Parisot](https://github.com/oncletom)\n- [Chris Needham](http://github.com/chrisn)\n\n\n# Copyright\n\nCopyright 2014 British Broadcasting Corporation\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bbcrd/peaks.js/issues"
  },
  "homepage": "https://github.com/bbcrd/peaks.js",
  "_id": "peaks.js@0.2.1",
  "dist": {
    "shasum": "5d35c2c249703834741c390721a734572c8b213d"
  },
  "_from": "peaks.js@",
  "_resolved": "https://registry.npmjs.org/peaks.js/-/peaks.js-0.2.1.tgz"
}
